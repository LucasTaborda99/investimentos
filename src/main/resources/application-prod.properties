# Configura a URL de conexão para o banco de dados de produção, com o endereço do host, a porta (3306 padrão do MySQL) e o nome do banco de dados
spring.datasource.url=jdbc:mysql://<seu-host>:3306/<seu-banco>

# Define o nome de usuário para acessar o banco de dados, obtido de uma variável de ambiente chamada MYSQL_USER
spring.datasource.username=${MYSQL_USER}

# Define a senha para acessar o banco de dados, também obtida de uma variável de ambiente chamada MYSQL_PASSWORD
spring.datasource.password=${MYSQL_PASSWORD}

# Define explicitamente o dialeto do Hibernate para o MySQL 8, que otimiza o mapeamento objeto-relacional
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Configura o Hibernate para validar o esquema do banco de dados com base nas entidades Java, sem alterá-lo
spring.jpa.hibernate.ddl-auto=validate

# Desabilita a exibição das consultas SQL no console para evitar exposição indesejada de informações sensíveis
spring.jpa.show-sql=false

# Desabilita a formatação das consultas SQL, pois não será exibido no console
spring.jpa.properties.hibernate.format_sql=false

# Configura o nível de log para o Spring Security para "WARN" (apenas exibe alertas e mensagens mais críticas)
logging.level.org.springframework.security=WARN

# Define a porta em que o servidor Spring Boot será executado em produção, neste caso, 8080
server.port=8080

# Configurando documentação da api, utilizando o Swagger
#Disable Whitelabel Error Page
server.error.whitelabel.enabled = false
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

